{"includedArchiveIdentifiers":["crisp-sdk-ios.Crisp"],"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/crisp\/sdkversions","title":"Deciding between Crisp & CrispWebRTC","type":"article"},{"children":[{"title":"Choose a method","type":"groupMarker"},{"path":"\/documentation\/crisp\/swiftpm","title":"Swift Package Manager","type":"article"},{"path":"\/documentation\/crisp\/cocoapods","title":"CocoaPods","type":"article"},{"path":"\/documentation\/crisp\/manual","title":"Manual installation","type":"article"}],"path":"\/documentation\/crisp\/installation","title":"Installation","type":"symbol"},{"path":"\/documentation\/crisp\/configureproject","title":"Configure your project","type":"article"},{"path":"\/documentation\/crisp\/configureandpresentsdk","title":"Configure SDK and present the Chat","type":"article"},{"path":"\/documentation\/crisp\/pushnotifications","title":"Handling Push Notifications","type":"article"},{"title":"Configuring your Website ID","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/configure(websiteid:)","title":"static func configure(websiteID: String)","type":"method"},{"title":"Presenting the Chatbox","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/chatviewcontroller\/init(configuration:)","title":"init(configuration: ChatViewConfiguration)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/crisp\/chatviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/crisp\/chatviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/crisp\/chatviewcontroller\/viewwilllayoutsubviews()","title":"func viewWillLayoutSubviews()","type":"method"}],"path":"\/documentation\/crisp\/chatviewcontroller","title":"ChatViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/chatview\/init(configuration:)","title":"init(configuration: ChatViewConfiguration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/chatview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(activationpoint:)-2rk1d","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(activationpoint:)-7d25a","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityactions(category:_:)","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityactivationpoint(_:)-4mphl","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityactivationpoint(_:)-7ypc1","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityactivationpoint(_:isenabled:)-80msb","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityactivationpoint(_:isenabled:)-xtts","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitycustomcontent(_:_:importance:)-2ehkc","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitycustomcontent(_:_:importance:)-3nfra","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitycustomcontent(_:_:importance:)-7ick5","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitycustomcontent(_:_:importance:)-8ck7e","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitycustomcontent(_:_:importance:)-9ipbe","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitycustomcontent(_:_:importance:)-9sy2p","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitycustomcontent(_:_:importance:)-9wcwe","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitycustomcontent(_:_:importance:)-shko","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydragpoint(_:description:)-4ibsc","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydragpoint(_:description:)-4pyqn","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydragpoint(_:description:)-7ata3","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydragpoint(_:description:isenabled:)-48pjb","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydragpoint(_:description:isenabled:)-9dk8a","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydragpoint(_:description:isenabled:)-l2gb","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydroppoint(_:description:)-1l6fo","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydroppoint(_:description:)-332ee","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydroppoint(_:description:)-8sb72","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydroppoint(_:description:isenabled:)-2da7g","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydroppoint(_:description:isenabled:)-44uci","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitydroppoint(_:description:isenabled:)-7psur","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityhidden(_:isenabled:)","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityhint(_:)-4id3w","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityhint(_:)-50bvv","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityhint(_:)-7o4z5","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityhint(_:isenabled:)-10pp6","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityhint(_:isenabled:)-1n22l","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityhint(_:isenabled:)-4q0al","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityidentifier(_:isenabled:)","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityinputlabels(_:)-40izg","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityinputlabels(_:)-5vwg5","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityinputlabels(_:)-9g459","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityinputlabels(_:isenabled:)-27bzp","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityinputlabels(_:isenabled:)-38tyw","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityinputlabels(_:isenabled:)-4b0yd","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitylabel(_:)-13q17","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitylabel(_:)-44tak","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitylabel(_:)-4jjdj","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitylabel(_:isenabled:)-1a35","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitylabel(_:isenabled:)-5mv97","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitylabel(_:isenabled:)-77eun","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitylabel(content:)","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrespondstouserinteraction(_:isenabled:)","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:)-4ea9j","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:)-6ig7a","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:)-96cwc","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:)-9n25t","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2a1gx","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3gwl6","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:entryid:entrylabel:)-553ao","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6s6c","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:entrylabel:)-1d2gy","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:entrylabel:)-1njy","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:entrylabel:)-2jmbo","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:entries:entrylabel:)-67iou","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:textranges:)-1iduf","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:textranges:)-55mvm","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:textranges:)-7na7f","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotor(_:textranges:)-bj9d","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityvalue(_:)-1j36j","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityvalue(_:)-2hht","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityvalue(_:)-892mn","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityvalue(_:isenabled:)-1ntrz","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityvalue(_:isenabled:)-705y9","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityvalue(_:isenabled:)-9x23n","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/actionsheet(store:)","title":"func actionSheet<ButtonAction>(store: Store<PresentationState<ConfirmationDialogState<ButtonAction>>, PresentationAction<ButtonAction>>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/actionsheet(store:state:action:)","title":"func actionSheet<State, Action, ButtonAction>(store: Store<PresentationState<State>, PresentationAction<Action>>, state: (State) -> ConfirmationDialogState<ButtonAction>?, action: (ButtonAction) -> Action) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:)","title":"func alert<Action>(Binding<Store<AlertState<Action>, Action>?>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:action:)-5fe1f","title":"func alert<Value>(Binding<AlertState<Value>?>, action: (Value?) async -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:action:)-5jmjv","title":"func alert<Value>(Binding<AlertState<Value>?>, action: (Value?) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:actions:)-41lwi","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:actions:)-6capn","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:actions:)-exj2","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:actions:message:)-4kxa7","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:actions:message:)-4u2pt","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:actions:message:)-66bsy","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:presenting:actions:)-4xbmi","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:presenting:actions:)-68cgd","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:presenting:actions:)-8z379","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:presenting:actions:message:)-32rbm","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:presenting:actions:message:)-53k7f","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(_:ispresented:presenting:actions:message:)-m7e7","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(item:title:actions:)","title":"func alert<Item, A>(item: Binding<Item?>, title: (Item) -> Text, actions: (Item) -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(item:title:actions:message:)","title":"func alert<Item, A, M>(item: Binding<Item?>, title: (Item) -> Text, actions: (Item) -> A, message: (Item) -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alert(store:)","title":"func alert<ButtonAction>(store: Store<PresentationState<AlertState<ButtonAction>>, PresentationAction<ButtonAction>>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/alert(store:state:action:)","title":"func alert<State, Action, ButtonAction>(store: Store<PresentationState<State>, PresentationAction<Action>>, state: (State) -> AlertState<ButtonAction>?, action: (ButtonAction) -> Action) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alignmentguide(_:computevalue:)-50woa","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alignmentguide(_:computevalue:)-5ynu0","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/allowswindowactivationevents(_:)","title":"func allowsWindowActivationEvents(Bool?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/aspectratio(_:contentmode:)-7fj0x","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/aspectratio(_:contentmode:)-9q4ql","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/background(_:in:fillstyle:)-38nif","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/background(_:in:fillstyle:)-5qmxu","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/background(in:fillstyle:)-1of90","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/background(in:fillstyle:)-983kc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/badge(_:)-3y54j","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/badge(_:)-4z7kb","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/badge(_:)-5whgw","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/badge(_:)-7boc2","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/bind(_:to:)","title":"func bind<ModelValue, ViewValue>(ModelValue, to: ViewValue) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/buttonstyle(_:)-2rrmd","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/buttonstyle(_:)-6y9z2","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolscale(_:)-3f6lb","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolscale(_:)-654o9","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolscale(domain:range:)-4stp3","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolscale(domain:range:)-8t6lt","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolscale(range:)-6ef84","title":"func chartSymbolScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolscale(range:)-6w9zd","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxaxislabel(_:position:alignment:spacing:)-15les","title":"func chartXAxisLabel<S>(S, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxaxislabel(_:position:alignment:spacing:)-9krjq","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyaxislabel(_:position:alignment:spacing:)-1s528","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyaxislabel(_:position:alignment:spacing:)-2mxoi","title":"func chartYAxisLabel<S>(S, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:)","title":"func confirmationDialog<Action>(Binding<Store<ConfirmationDialogState<Action>, Action>?>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:action:)-44pqa","title":"func confirmationDialog<Value>(Binding<ConfirmationDialogState<Value>?>, action: (Value?) async -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:action:)-f95g","title":"func confirmationDialog<Value>(Binding<ConfirmationDialogState<Value>?>, action: (Value?) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-31o3","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3y4c8","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4o3h0","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2pzde","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3tv71","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4mg25","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-53pv7","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6gay7","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7r5ui","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7b0na","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7uemx","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7usqm","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(item:titlevisibility:title:actions:)","title":"func confirmationDialog<Item, A>(item: Binding<Item?>, titleVisibility: Visibility, title: (Item) -> Text, actions: (Item) -> A) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(item:titlevisibility:title:actions:message:)","title":"func confirmationDialog<Item, A, M>(item: Binding<Item?>, titleVisibility: Visibility, title: (Item) -> Text, actions: (Item) -> A, message: (Item) -> M) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/confirmationdialog(store:)","title":"func confirmationDialog<ButtonAction>(store: Store<PresentationState<ConfirmationDialogState<ButtonAction>>, PresentationAction<ButtonAction>>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/confirmationdialog(store:state:action:)","title":"func confirmationDialog<State, Action, ButtonAction>(store: Store<PresentationState<State>, PresentationAction<Action>>, state: (State) -> ConfirmationDialogState<ButtonAction>?, action: (ButtonAction) -> Action) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/containervalue(_:_:)","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contentmargins(_:_:for:)-3kiyu","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contentmargins(_:_:for:)-74h8o","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contenttoolbar(for:content:)-6k53g","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contenttoolbar(for:content:)-85kbb","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/crisp_accessibilitylabel(_:)","title":"func crisp_accessibilityLabel(String) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/defaultadaptabletabbarplacement(_:)","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/defaulthovereffect(_:)-7nnw8","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/defaulthovereffect(_:)-g0tt","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/defaultscrollanchor(_:for:)","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/dialogsuppressiontoggle(_:issuppressed:)-23acr","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/dialogsuppressiontoggle(_:issuppressed:)-7to47","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/dialogsuppressiontoggle(_:issuppressed:)-8u9ke","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/documentbrowsercontextmenu(_:)","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/draggable(_:)","title":"func draggable<T>(@autoclosure () -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/draggable(_:preview:)","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/dynamictypesize(_:)-235bm","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/dynamictypesize(_:)-2qv5g","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/environment(_:)-62kdb","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/environment(_:)-i0xo","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogconfirmationlabel(_:)-1440g","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogconfirmationlabel(_:)-299tb","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogconfirmationlabel(_:)-5dzod","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogmessage(_:)-1qmdy","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogmessage(_:)-72cdm","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogmessage(_:)-7xjcm","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8t3v4","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-968l8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-2c2we","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-5h4y7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7eboi","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-86oh3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-1e0c3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-619os","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporterfilenamelabel(_:)-2hws3","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporterfilenamelabel(_:)-48igr","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileexporterfilenamelabel(_:)-61g2s","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusedobject(_:)-4duik","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusedobject(_:)-72al","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusedsceneobject(_:)-24sbf","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusedsceneobject(_:)-6kekh","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusedscenevalue(_:)","title":"func focusedSceneValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusedscenevalue(_:_:)-2fwcu","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusedscenevalue(_:_:)-727qr","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusedvalue(_:_:)-3gj8i","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/focusedvalue(_:_:)-5ow5h","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fullscreencover(item:id:ondismiss:content:)-1ivz3","title":"func fullScreenCover<Item, ID, Content>(item: Binding<Item?>, id: KeyPath<Item, ID>, onDismiss: (() -> Void)?, content: (Binding<Item>) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fullscreencover(item:id:ondismiss:content:)-1vth4","title":"func fullScreenCover<Item, ID, Content>(item: Binding<Item?>, id: KeyPath<Item, ID>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fullscreencover(item:ondismiss:content:)-6uyxn","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/fullscreencover(item:ondismiss:content:)-9cewh","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Binding<Item>) -> Content) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/fullscreencover(store:ondismiss:content:)","title":"func fullScreenCover<State, Action, Content>(store: Store<PresentationState<State>, PresentationAction<Action>>, onDismiss: (() -> Void)?, content: (Store<State, Action>) -> Content) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/fullscreencover(store:state:action:ondismiss:content:)","title":"func fullScreenCover<State, Action, DestinationState, DestinationAction, Content>(store: Store<PresentationState<State>, PresentationAction<Action>>, state: (State) -> DestinationState?, action: (DestinationAction) -> Action, onDismiss: (() -> Void)?, content: (Store<DestinationState, DestinationAction>) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/gesture(_:)","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/gesture(_:isenabled:)","title":"func gesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/gesture(_:name:isenabled:)","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/handgestureshortcut(_:isenabled:)","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/help(_:)-2lxgj","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/help(_:)-6mirm","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/help(_:)-7g056","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/highprioritygesture(_:isenabled:)","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/highprioritygesture(_:name:isenabled:)","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/hovereffect(_:isenabled:)-1rc69","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/hovereffect(_:isenabled:)-4oxt8","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/keyboardshortcut(_:)-1pzae","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/keyboardshortcut(_:)-5e4c5","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/labelsvisibility(_:)","title":"func labelsVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/legacyalert(store:)","title":"func legacyAlert<ButtonAction>(store: Store<PresentationState<AlertState<ButtonAction>>, PresentationAction<ButtonAction>>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/legacyalert(store:state:action:)","title":"func legacyAlert<State, Action, ButtonAction>(store: Store<PresentationState<State>, PresentationAction<Action>>, state: (State) -> AlertState<ButtonAction>?, action: (ButtonAction) -> Action) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listitemtint(_:)-1hdmn","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listitemtint(_:)-59a72","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listsectionspacing(_:)-4wyuk","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/listsectionspacing(_:)-7kx08","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/matchedtransitionsource(id:in:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/matchedtransitionsource(id:in:configuration:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/materialactiveappearance(_:)","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/crisp\/chatview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationbartitle(_:)-1ppsj","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationbartitle(_:)-1ro2s","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationbartitle(_:)-998r1","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationbartitle(_:displaymode:)-16h32","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationbartitle(_:displaymode:)-6cist","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationbartitle(_:displaymode:)-8163z","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdestination(item:destination:)-3tmt9","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdestination(item:destination:)-5xmy5","title":"func navigationDestination<D, C>(item: Binding<D?>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdestination(item:destination:)-xiev","title":"func navigationDestination<D, C>(item: Binding<D?>, destination: (Binding<D>) -> C) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationdestination(store:destination:)","title":"func navigationDestination<State, Action, Destination>(store: Store<PresentationState<State>, PresentationAction<Action>>, destination: (Store<State, Action>) -> Destination) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationdestination(store:state:action:destination:)","title":"func navigationDestination<State, Action, DestinationState, DestinationAction, Destination>(store: Store<PresentationState<State>, PresentationAction<Action>>, state: (State) -> DestinationState?, action: (DestinationAction) -> Action, destination: (Store<DestinationState, DestinationAction>) -> Destination) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdocument(_:)-43ztk","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdocument(_:)-7sdb8","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdocument(_:preview:)-1ehvo","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdocument(_:preview:)-2gzuc","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdocument(_:preview:)-62aw9","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationdocument(_:preview:)-6cerf","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationtitle(_:)-11rra","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationtitle(_:)-3gwdj","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationtitle(_:)-66he3","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationtitle(_:)-7axhn","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationtitle(_:)-9d632","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/navigationtransition(_:)","title":"func navigationTransition(some NavigationTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onchange(of:initial:_:)-5cd2f","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onchange(of:initial:_:)-7ki7u","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/oncontinuoushover(coordinatespace:perform:)-584p9","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/oncontinuoushover(coordinatespace:perform:)-8356x","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/ondrop(of:delegate:)-2jln2","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ondrop(of:delegate:)-5vp1p","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ondrop(of:istargeted:perform:)-1wj5l","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/ondrop(of:istargeted:perform:)-22yux","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ondrop(of:istargeted:perform:)-3azlg","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/ondrop(of:istargeted:perform:)-9y7jf","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ongeometrychange(for:of:action:)-2hi5q","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ongeometrychange(for:of:action:)-7b72r","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onscrollgeometrychange(for:of:action:)","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onscrollphasechange(_:)-15l9k","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onscrollphasechange(_:)-9ofi5","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onscrolltargetvisibilitychange(idtype:threshold:_:)","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onscrollvisibilitychange(threshold:_:)","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/ontapgesture(count:coordinatespace:perform:)-8j1x6","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ontapgesture(count:coordinatespace:perform:)-9ve0l","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/padding(_:)-1rl9m","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/padding(_:)-61gh8","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/popover(item:attachmentanchor:arrowedge:content:)-1wfmv","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/popover(item:attachmentanchor:arrowedge:content:)-tduv","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Binding<Item>) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/popover(item:id:attachmentanchor:arrowedge:content:)-3izf4","title":"func popover<Item, ID, Content>(item: Binding<Item?>, id: KeyPath<Item, ID>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/popover(item:id:attachmentanchor:arrowedge:content:)-69m0x","title":"func popover<Item, ID, Content>(item: Binding<Item?>, id: KeyPath<Item, ID>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Binding<Item>) -> Content) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/popover(store:attachmentanchor:arrowedge:content:)","title":"func popover<State, Action, Content>(store: Store<PresentationState<State>, PresentationAction<Action>>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Store<State, Action>) -> Content) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/popover(store:state:action:attachmentanchor:arrowedge:content:)","title":"func popover<State, Action, DestinationState, DestinationAction, Content>(store: Store<PresentationState<State>, PresentationAction<Action>>, state: (State) -> DestinationState?, action: (DestinationAction) -> Action, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Store<DestinationState, DestinationAction>) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/popovertip(_:arrowedge:action:)","title":"func popoverTip((any Tip)?, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/presentationsizing(_:)","title":"func presentationSizing(some PresentationSizing) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/renameaction(_:)-32d90","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/renameaction(_:)-8ps7p","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/safeareainset(edge:alignment:spacing:content:)-385ve","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/safeareainset(edge:alignment:spacing:content:)-6byni","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/safeareapadding(_:)-1520q","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/safeareapadding(_:)-4qsne","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scaleeffect(_:anchor:)-2j1d6","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scaleeffect(_:anchor:)-69jeb","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrollinputbehavior(_:for:)","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrollposition(_:anchor:)","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchcompletion(_:)-26e8l","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchcompletion(_:)-4h8k3","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchfocused(_:)","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchfocused(_:equals:)","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-144d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2v171","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7j7o0","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:editabletokens:placement:prompt:token:)-1ui87","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:editabletokens:placement:prompt:token:)-67b0e","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:editabletokens:placement:prompt:token:)-87kr2","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:ispresented:placement:prompt:)-1fvdo","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:ispresented:placement:prompt:)-2arr4","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:ispresented:placement:prompt:)-6wnac","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:placement:prompt:)-41z7v","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:placement:prompt:)-6ol7f","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:placement:prompt:)-9ffx6","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/searchable(text:placement:prompt:suggestions:)-4rinz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/searchable(text:placement:prompt:suggestions:)-5fe5s","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/searchable(text:placement:prompt:suggestions:)-7xv8q","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:ispresented:placement:prompt:token:)-260ec","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5zq8u","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8g0qn","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:placement:prompt:token:)-6laz0","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:placement:prompt:token:)-7ouhd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:placement:prompt:token:)-9omhw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2wtkk","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5uwwx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-aav9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-49711","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7wr9d","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-986k4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/sectionactions(content:)","title":"func sectionActions<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/sheet(item:id:ondismiss:content:)-1jh9g","title":"func sheet<Item, ID, Content>(item: Binding<Item?>, id: KeyPath<Item, ID>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/sheet(item:id:ondismiss:content:)-29ub7","title":"func sheet<Item, ID, Content>(item: Binding<Item?>, id: KeyPath<Item, ID>, onDismiss: (() -> Void)?, content: (Binding<Item>) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/sheet(item:ondismiss:content:)-6g5lq","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Binding<Item>) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/sheet(item:ondismiss:content:)-gaym","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/sheet(store:ondismiss:content:)","title":"func sheet<State, Action, Content>(store: Store<PresentationState<State>, PresentationAction<Action>>, onDismiss: (() -> Void)?, content: (Store<State, Action>) -> Content) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/sheet(store:state:action:ondismiss:content:)","title":"func sheet<State, Action, DestinationState, DestinationAction, Content>(store: Store<PresentationState<State>, PresentationAction<Action>>, state: (State) -> DestinationState?, action: (DestinationAction) -> Action, onDismiss: (() -> Void)?, content: (Store<DestinationState, DestinationAction>) -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/simultaneousgesture(_:isenabled:)","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/simultaneousgesture(_:name:isenabled:)","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tabviewcustomization(_:)","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tabviewsidebarbottombar(content:)","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tabviewsidebarfooter(content:)","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tabviewsidebarheader(content:)","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tag(_:includeoptional:)","title":"func tag<V>(V, includeOptional: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/textrenderer(_:)","title":"func textRenderer<T>(T) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/textselectionaffinity(_:)","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tint(_:)-1sxcg","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tint(_:)-34cmi","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tipbackground(_:)","title":"func tipBackground(some ShapeStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tipcornerradius(_:antialiased:)","title":"func tipCornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tipimagesize(_:)","title":"func tipImageSize(CGSize) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tipimagestyle(_:)","title":"func tipImageStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tipimagestyle(_:_:)","title":"func tipImageStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tipimagestyle(_:_:_:)","title":"func tipImageStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tipviewstyle(_:)","title":"func tipViewStyle(some TipViewStyle) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbar(content:)-4oso6","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbar(content:)-9mcij","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbarbackground(_:for:)-4z311","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/crisp\/chatview\/toolbarbackground(_:for:)-5g13s","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbarbackgroundvisibility(_:for:)","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbarforegroundstyle(_:for:)","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/toolbarvisibility(_:for:)","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/typeselectequivalent(_:)-1zdvd","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/typeselectequivalent(_:)-3njb0","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/typeselectequivalent(_:)-3zu29","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/typesettinglanguage(_:isenabled:)-3hrn3","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/typesettinglanguage(_:isenabled:)-6mqtj","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/windowtoolbarfullscreenvisibility(_:)","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/writingtoolsaffordancevisibility(_:)","title":"func writingToolsAffordanceVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/writingtoolsbehavior(_:)","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","type":"method"},{"path":"\/documentation\/crisp\/chatview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/crisp\/chatview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/chatview","title":"ChatView","type":"struct"},{"title":"Session Continuity","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/settokenid(tokenid:)","title":"static func setTokenID(tokenID: String)","type":"method"},{"title":"Enriching a chat session with additional information","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/user\/avatar","title":"var avatar: URL?","type":"property"},{"path":"\/documentation\/crisp\/user\/company","title":"var company: Company?","type":"property"},{"path":"\/documentation\/crisp\/user\/email","title":"var email: String?","type":"property"},{"path":"\/documentation\/crisp\/user\/nickname","title":"var nickname: String?","type":"property"},{"path":"\/documentation\/crisp\/user\/phone","title":"var phone: String?","type":"property"},{"path":"\/documentation\/crisp\/user\/signature","title":"var signature: String?","type":"property"}],"path":"\/documentation\/crisp\/user","title":"User","type":"class"},{"children":[{"title":"Setting session data","type":"groupMarker"},{"path":"\/documentation\/crisp\/session\/setbool(_:forkey:)","title":"func setBool(Bool, forKey: String)","type":"method"},{"path":"\/documentation\/crisp\/session\/getbool(forkey:)","title":"func getBool(forKey: String) -> Bool?","type":"method"},{"path":"\/documentation\/crisp\/session\/setint(_:forkey:)","title":"func setInt(Int, forKey: String)","type":"method"},{"path":"\/documentation\/crisp\/session\/getint(forkey:)","title":"func getInt(forKey: String) -> Int?","type":"method"},{"path":"\/documentation\/crisp\/session\/setstring(_:forkey:)","title":"func setString(String, forKey: String)","type":"method"},{"path":"\/documentation\/crisp\/session\/getstring(forkey:)","title":"func getString(forKey: String) -> String?","type":"method"},{"title":"Pushing events","type":"groupMarker"},{"path":"\/documentation\/crisp\/session\/pushevents(_:)","title":"func pushEvents([SessionEvent])","type":"method"},{"title":"Setting segments","type":"groupMarker"},{"path":"\/documentation\/crisp\/session\/segments","title":"var segments: [String]?","type":"property"},{"title":"Gathering information about the current session","type":"groupMarker"},{"path":"\/documentation\/crisp\/session\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/crisp\/session\/isongoing","title":"var isOngoing: Bool","type":"property"},{"title":"Resetting a session","type":"groupMarker"},{"path":"\/documentation\/crisp\/session\/reset()","title":"func reset()","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/session\/segment","title":"var segment: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/crisp\/session\/pushevent(_:)","title":"func pushEvent(SessionEvent)","type":"method"}],"path":"\/documentation\/crisp\/session","title":"Session","type":"class"},{"title":"Displaying the Helpdesk","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/searchhelpdesk()","title":"static func searchHelpdesk()","type":"method"},{"path":"\/documentation\/crisp\/crispsdk\/openhelpdeskarticle(locale:slug:title:category:)","title":"static func openHelpdeskArticle(locale: String, slug: String, title: String?, category: String?)","type":"method"},{"title":"Resetting a chat session","type":"groupMarker"},{"path":"\/documentation\/crisp\/session\/reset()","title":"func reset()","type":"method"},{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/crisp\/callbacktoken","title":"CallbackToken","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/chatviewconfiguration\/activatestextfieldonappear","title":"var activatesTextFieldOnAppear: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/chatviewconfiguration\/default","title":"static let `default`: ChatViewConfiguration","type":"property"}],"path":"\/documentation\/crisp\/chatviewconfiguration","title":"ChatViewConfiguration","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/company\/init(name:url:companydescription:employment:geolocation:)","title":"init(name: String?, url: URL?, companyDescription: String?, employment: Employment?, geolocation: Geolocation?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/company\/companydescription","title":"let companyDescription: String?","type":"property"},{"path":"\/documentation\/crisp\/company\/employment","title":"let employment: Employment?","type":"property"},{"path":"\/documentation\/crisp\/company\/geolocation","title":"let geolocation: Geolocation?","type":"property"},{"path":"\/documentation\/crisp\/company\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/crisp\/company\/url","title":"let url: URL?","type":"property"}],"path":"\/documentation\/crisp\/company","title":"Company","type":"class"},{"children":[{"title":"Configuring your Website ID","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/configure(websiteid:)","title":"static func configure(websiteID: String)","type":"method"},{"title":"Session Continuity","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/settokenid(tokenid:)","title":"static func setTokenID(tokenID: String)","type":"method"},{"title":"Enriching a chat session with additional information","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/user","title":"static let user: User","type":"property"},{"path":"\/documentation\/crisp\/crispsdk\/session","title":"static let session: Session","type":"property"},{"title":"Presenting the Helpdesk","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/searchhelpdesk()","title":"static func searchHelpdesk()","type":"method"},{"path":"\/documentation\/crisp\/crispsdk\/openhelpdeskarticle(locale:slug:title:category:)","title":"static func openHelpdeskArticle(locale: String, slug: String, title: String?, category: String?)","type":"method"},{"title":"Gathering information about the Crisp SDK","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/version","title":"static var version: String","type":"property"},{"title":"Logging Chatbox messages for debugging purposes","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/addloghandler(_:)","title":"static func addLogHandler(some CrispLogHandler)","type":"method"},{"path":"\/documentation\/crisp\/crispsdk\/setloglevel(_:)","title":"static func setLogLevel(Severity)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/locale","title":"static var locale: Locale","type":"property"},{"path":"\/documentation\/crisp\/crispsdk\/log","title":"static var log: (Severity, @autoclosure () -> String) -> Void","type":"property"},{"path":"\/documentation\/crisp\/crispsdk\/logerror","title":"static var logError: (any Error) -> Void","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/crisp\/crispsdk\/addcallback(_:)","title":"static func addCallback(Callback) -> CallbackToken","type":"method"},{"path":"\/documentation\/crisp\/crispsdk\/handlepushnotification(_:)","title":"static func handlePushNotification(UNNotification)","type":"method"},{"path":"\/documentation\/crisp\/crispsdk\/iscrisppushnotification(_:)","title":"static func isCrispPushNotification(UNNotification) -> Bool","type":"method"},{"path":"\/documentation\/crisp\/crispsdk\/openchat()","title":"static func openChat()","type":"method"},{"path":"\/documentation\/crisp\/crispsdk\/removecallback(token:)","title":"static func removeCallback(token: CallbackToken)","type":"method"},{"path":"\/documentation\/crisp\/crispsdk\/setdevicetoken(_:)","title":"static func setDeviceToken(Data)","type":"method"},{"path":"\/documentation\/crisp\/crispsdk\/setshouldpromptfornotificationpermission(_:)","title":"static func setShouldPromptForNotificationPermission(Bool)","type":"method"},{"path":"\/documentation\/crisp\/crispsdk\/showmessage(with:)","title":"static func showMessage(with: Message.Content)","type":"method"}],"path":"\/documentation\/crisp\/crispsdk","title":"CrispSDK","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/employment\/init(title:role:)","title":"init(title: String?, role: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/employment\/role","title":"let role: String?","type":"property"},{"path":"\/documentation\/crisp\/employment\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/crisp\/employment","title":"Employment","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/geolocation\/init(city:country:)","title":"init(city: String?, country: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/geolocation\/city","title":"let city: String?","type":"property"},{"path":"\/documentation\/crisp\/geolocation\/country","title":"let country: String?","type":"property"}],"path":"\/documentation\/crisp\/geolocation","title":"Geolocation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/sessionevent\/init(name:color:)","title":"init(name: String, color: SessionEventColor?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/sessionevent\/color","title":"var color: SessionEventColor?","type":"property"},{"path":"\/documentation\/crisp\/sessionevent\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/crisp\/sessionevent\/setbool(_:forkey:)","title":"func setBool(Bool, forKey: String)","type":"method"},{"path":"\/documentation\/crisp\/sessionevent\/setint(_:forkey:)","title":"func setInt(Int, forKey: String)","type":"method"},{"path":"\/documentation\/crisp\/sessionevent\/setstring(_:forkey:)","title":"func setString(String, forKey: String)","type":"method"}],"path":"\/documentation\/crisp\/sessionevent","title":"SessionEvent","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/crisp\/crisploghandler\/log(error:)","title":"func log(error: any Error)","type":"method"},{"path":"\/documentation\/crisp\/crisploghandler\/log(severity:message:)","title":"func log(severity: Severity, message: String)","type":"method"}],"path":"\/documentation\/crisp\/crisploghandler","title":"CrispLogHandler","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/user-swift.struct\/avatar","title":"var avatar: URL?","type":"property"},{"path":"\/documentation\/crisp\/message\/user-swift.struct\/nickname","title":"var nickname: String?","type":"property"},{"path":"\/documentation\/crisp\/message\/user-swift.struct\/userid","title":"var userId: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/user-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/user-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/user-swift.struct","title":"Message.User","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.property","title":"var content: Content","type":"property"},{"path":"\/documentation\/crisp\/message\/fingerprint","title":"var fingerprint: Int64","type":"property"},{"path":"\/documentation\/crisp\/message\/from","title":"var from: Sender","type":"property"},{"path":"\/documentation\/crisp\/message\/isme","title":"var isMe: Bool","type":"property"},{"path":"\/documentation\/crisp\/message\/origin-swift.property","title":"var origin: Origin","type":"property"},{"path":"\/documentation\/crisp\/message\/timestamp","title":"var timestamp: Date","type":"property"},{"path":"\/documentation\/crisp\/message\/user-swift.property","title":"var user: User?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/attachmentpreview\/init(excerpt:image:)","title":"init(excerpt: String?, image: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/attachmentpreview\/excerpt","title":"var excerpt: String?","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/attachmentpreview\/image","title":"var image: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/attachmentpreview\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/attachmentpreview\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/attachmentpreview","title":"Message.Content.AttachmentPreview","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/audiofile\/init(mimetype:url:duration:)","title":"init(mimeType: String, url: URL, duration: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/audiofile\/duration","title":"var duration: Int","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/audiofile\/mimetype","title":"var mimeType: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/audiofile\/url","title":"var url: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/audiofile\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/audiofile\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/audiofile","title":"Message.Content.AudioFile","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/action\/init(label:url:)","title":"init(label: String, url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/action\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/action\/url","title":"var url: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/action\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/action\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/action","title":"Message.Content.CarouselValue.Target.Action","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/init(title:description:image:actions:)","title":"init(title: String, description: String, image: URL?, actions: [Action])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/actions","title":"var actions: [Action]","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/image","title":"var image: URL?","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/target","title":"Message.Content.CarouselValue.Target","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/init(text:targets:)","title":"init(text: String, targets: [Target])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/targets","title":"var targets: [Target]","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/text","title":"var text: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/carouselvalue","title":"Message.Content.CarouselValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/embeddedpreview\/init(excerpt:image:embed:)","title":"init(excerpt: String?, image: URL, embed: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/embeddedpreview\/embed","title":"var embed: URL","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/embeddedpreview\/excerpt","title":"var excerpt: String?","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/embeddedpreview\/image","title":"var image: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/embeddedpreview\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/embeddedpreview\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/embeddedpreview","title":"Message.Content.EmbeddedPreview","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/fieldvalue\/init(id:text:explain:value:)","title":"init(id: String, text: String, explain: String, value: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/fieldvalue\/explain","title":"var explain: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/fieldvalue\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/fieldvalue\/text","title":"var text: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/fieldvalue\/value","title":"var value: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/fieldvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/fieldvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/fieldvalue","title":"Message.Content.FieldValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/file\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/file\/init(name:mimetype:url:)","title":"init(name: String, mimeType: String, url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/file\/mimetype","title":"var mimeType: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/file\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/file\/url","title":"var url: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/file\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/file\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/file","title":"Message.Content.File","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/imagefile\/init(mimetype:url:)","title":"init(mimeType: String, url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/imagefile\/mimetype","title":"var mimeType: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/imagefile\/url","title":"var url: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/imagefile\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/imagefile\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/imagefile","title":"Message.Content.ImageFile","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/init(type:target:)","title":"init(type: Kind, target: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/target","title":"var target: URL","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/type","title":"var type: Kind","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/kind\/frame","title":"case frame","type":"case"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/kind\/link","title":"case link","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/kind\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/kind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/kind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/kind\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/kind\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/kind\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/kind","title":"Message.Content.PickerValue.Choice.Action.Kind","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.struct","title":"Message.Content.PickerValue.Choice.Action","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/init(label:icon:selected:value:action:)","title":"init(label: String, icon: String?, selected: Bool, value: String, action: Action?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/action-swift.property","title":"var action: Action?","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/icon","title":"var icon: String?","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/selected","title":"var selected: Bool","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/value","title":"var value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choice","title":"Message.Content.PickerValue.Choice","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/init(id:text:choices:)","title":"init(id: String, text: String, choices: [Choice])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/choices","title":"var choices: [Choice]","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/text","title":"var text: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/pickervalue","title":"Message.Content.PickerValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/websiteattachment\/init(title:website:url:)","title":"init(title: String, website: String, url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/websiteattachment\/title","title":"var title: String","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/websiteattachment\/url","title":"var url: URL","type":"property"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/websiteattachment\/website","title":"var website: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/websiteattachment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/websiteattachment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/websiteattachment","title":"Message.Content.WebsiteAttachment","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/animation(_:)","title":"case animation(ImageFile)","type":"case"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/audio(_:)","title":"case audio(AudioFile)","type":"case"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/carousel(_:)","title":"case carousel(CarouselValue)","type":"case"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/field(_:)","title":"case field(FieldValue)","type":"case"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/file(_:)","title":"case file(File)","type":"case"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/picker(_:)","title":"case picker(PickerValue)","type":"case"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/text(_:)","title":"case text(String)","type":"case"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/textwithattachment(_:_:_:)","title":"case textWithAttachment(String, WebsiteAttachment, AttachmentPreview?)","type":"case"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/textwithvideoattachment(_:_:_:)","title":"case textWithVideoAttachment(String, WebsiteAttachment, EmbeddedPreview)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/content-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/content-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/content-swift.enum","title":"Message.Content","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/origin-swift.enum\/local","title":"case local","type":"case"},{"path":"\/documentation\/crisp\/message\/origin-swift.enum\/network","title":"case network","type":"case"},{"path":"\/documentation\/crisp\/message\/origin-swift.enum\/update","title":"case update","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/origin-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/origin-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/origin-swift.enum","title":"Message.Origin","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/sender\/operator","title":"case `operator`","type":"case"},{"path":"\/documentation\/crisp\/message\/sender\/user","title":"case user","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/sender\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/sender\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message\/sender","title":"Message.Sender","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/message\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/message\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/message","title":"Message","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/crisp\/callback\/chatclosed(_:)","title":"case chatClosed(VoidHandler)","type":"case"},{"path":"\/documentation\/crisp\/callback\/chatopened(_:)","title":"case chatOpened(VoidHandler)","type":"case"},{"path":"\/documentation\/crisp\/callback\/messagereceived(_:)","title":"case messageReceived(MessageHandler)","type":"case"},{"path":"\/documentation\/crisp\/callback\/messagesent(_:)","title":"case messageSent(MessageHandler)","type":"case"},{"path":"\/documentation\/crisp\/callback\/sessionloaded(_:)","title":"case sessionLoaded(SessionIdHandler)","type":"case"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/crisp\/callback\/messagehandler","title":"Callback.MessageHandler","type":"typealias"},{"path":"\/documentation\/crisp\/callback\/sessionidhandler","title":"Callback.SessionIdHandler","type":"typealias"},{"path":"\/documentation\/crisp\/callback\/voidhandler","title":"Callback.VoidHandler","type":"typealias"}],"path":"\/documentation\/crisp\/callback","title":"Callback","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/crisp\/sessioneventcolor\/black","title":"case black","type":"case"},{"path":"\/documentation\/crisp\/sessioneventcolor\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/crisp\/sessioneventcolor\/brown","title":"case brown","type":"case"},{"path":"\/documentation\/crisp\/sessioneventcolor\/green","title":"case green","type":"case"},{"path":"\/documentation\/crisp\/sessioneventcolor\/grey","title":"case grey","type":"case"},{"path":"\/documentation\/crisp\/sessioneventcolor\/orange","title":"case orange","type":"case"},{"path":"\/documentation\/crisp\/sessioneventcolor\/pink","title":"case pink","type":"case"},{"path":"\/documentation\/crisp\/sessioneventcolor\/purple","title":"case purple","type":"case"},{"path":"\/documentation\/crisp\/sessioneventcolor\/red","title":"case red","type":"case"},{"path":"\/documentation\/crisp\/sessioneventcolor\/yellow","title":"case yellow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/sessioneventcolor\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/sessioneventcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/sessioneventcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/sessioneventcolor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/crisp\/sessioneventcolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/crisp\/sessioneventcolor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/sessioneventcolor","title":"SessionEventColor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/crisp\/severity\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/crisp\/severity\/error","title":"case error","type":"case"},{"path":"\/documentation\/crisp\/severity\/info","title":"case info","type":"case"},{"path":"\/documentation\/crisp\/severity\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/crisp\/severity\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/severity\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/crisp\/severity\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/crisp\/severity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/crisp\/severity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/crisp\/severity\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/crisp\/severity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/crisp\/severity\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/crisp\/severity","title":"Severity","type":"enum"}],"path":"\/documentation\/crisp","title":"Crisp","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}